/* Reset */
* { margin: 0; padding: 0; box-sizing: border-box; }

html, body { 
  height: 100%; 
  width: 100%; 
  font-family: 'Orbitron', Arial, sans-serif; 
  background: #111; 
  color: #fff; 
  overflow-x: hidden;
}

/* Particles background */
#particles-js {
  position: fixed;
  inset: 0;
  z-index: 0;
  background: #111;
}

/* Start Overlay */
#start-overlay {
  position: fixed;
  inset: 0;
  background: rgba(17,17,17,0.96);
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 1000;
  transition: opacity 280ms ease;
}
#start-overlay.hidden { opacity: 0; pointer-events: none; }

#start-btn {
  padding: 26px 88px;
  font-size: 34px;
  font-weight: 700;
  background: linear-gradient(145deg,#ff3333,#ff0000);
  color: #fff;
  border: none;
  border-radius: 14px;
  cursor: pointer;
  box-shadow: 0 0 60px #ff3333, 0 0 120px rgba(255,51,51,0.3);
  transition: transform .25s ease, box-shadow .25s ease;
}
#start-btn:hover { transform: scale(1.08); }
#start-btn:active { transform: scale(0.97); }

/* Main container */
.container {
  position: relative;
  z-index: 5;
  min-height: 100vh;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  padding: 40px 20px;
  text-align: center;
}

/* Logo */
.logo img {
  width: 160px;
  max-width: 30vmax;
  display: block;
  margin: 0 auto;
  animation: logoSpin 10s linear infinite;
}
@keyframes logoSpin { from { transform: rotate(0deg); } to { transform: rotate(360deg); } }

/* Title */
h1 {
  margin-top: 20px;
  font-size: 44px;
  color: #ff3333;
  text-shadow: 0 0 18px rgba(255,51,51,0.5);
  letter-spacing: 2px;
}
p { margin-top: 8px; color: #d0d0d0; font-size: 16px; }

/* Buttons */
.buttons {
  margin-top: 24px;
  display: flex;
  flex-wrap: wrap;
  gap: 14px;
  justify-content: center;
  max-width: 1000px;
}

.btn {
  min-width: 260px;
  padding: 14px 22px;
  font-size: 18px;
  font-family: 'Orbitron', sans-serif;
  border-radius: 12px;
  border: none;
  background: linear-gradient(145deg, #222, #111);
  color: #fff;
  cursor: pointer;
  position: relative;
  overflow: hidden;
  box-shadow: 0 6px 16px rgba(0,0,0,0.6);
  transition: all 0.35s ease;

  opacity: 0.3;
  transform: translateY(40px) scale(0.9);
  pointer-events: none;
}

.btn.active {
  opacity: 1;
  transform: translateY(0) scale(1);
  pointer-events: auto;
  animation: btnFloat 4s ease-in-out infinite, neonPulse 6s ease-in-out infinite;
}

.btn:hover {
  background: linear-gradient(145deg, #333, #111);
  transform: translateY(-6px) scale(1.08);
  box-shadow: 0 0 30px #ff3333, 0 0 60px rgba(255,51,51,0.25);
}

.btn:active { transform: translateY(2px) scale(0.97); }

.btn::after {
  content: "";
  position: absolute;
  top: 0;
  left: -100%;
  width: 60%;
  height: 100%;
  background: linear-gradient(120deg, transparent, rgba(255,255,255,0.15), transparent);
  transform: skewX(-20deg);
  transition: left 0.7s ease;
}
.btn:hover::after { left: 140%; }

@keyframes btnFloat {
  0%, 100% { transform: translateY(0) scale(1); }
  50% { transform: translateY(-6px) scale(1.02); }
}

@keyframes neonPulse {
  0%   { box-shadow: 0 0 14px #ff3333, 0 0 32px rgba(255,51,51,0.4); }
  33%  { box-shadow: 0 0 14px #ff66cc, 0 0 32px rgba(255,102,204,0.4); }
  66%  { box-shadow: 0 0 14px #9933ff, 0 0 32px rgba(153,51,255,0.4); }
  100% { box-shadow: 0 0 14px #ff3333, 0 0 32px rgba(255,51,51,0.4); }
}

/* Version */
.version-text {
  position: fixed;
  right: 12px;
  bottom: 12px;
  font-size: 13px;
  color: #aaa;
  z-index: 6;
  pointer-events: none;
}

/* Corner buttons */
.corner-buttons { position: fixed; top: 12px; left: 12px; display: flex; flex-direction: column; gap: 12px; z-index: 10; }
.corner-btn {
  width: 48px; height: 48px; border: none; border-radius: 12px;
  background: #111; cursor: pointer;
  box-shadow: 0 4px 12px rgba(0,0,0,0.5);
  transition: transform 0.2s ease, box-shadow 0.2s ease;
}
.corner-btn img { width: 100%; height: 100%; object-fit: contain; }
.corner-btn:hover { transform: scale(1.15); box-shadow: 0 0 20px #ff3333, 0 0 40px rgba(255,51,51,0.2); }

/* Loading Screen */
#loading-screen {
  position: fixed; inset:0; width:100%; height:100%;
  background: rgba(17,17,17,0.96); display:flex;
  flex-direction:column; align-items:center; justify-content:center;
  z-index:1500; opacity:0; pointer-events:none; transition: opacity 0.4s ease;
}
#loading-screen.active { opacity:1; pointer-events:auto; }

.loading-logo { width:100px; margin-bottom:20px; animation: spin 2.5s linear infinite; }
@keyframes spin { from { transform: rotate(0deg); } to { transform: rotate(360deg); } }

.loading-bar {
  position: relative; width:300px; height:18px;
  background: rgba(255,255,255,0.15); border-radius:12px; overflow:hidden; margin:15px auto;
  box-shadow: 0 0 8px rgba(255,51,51,0.6);
}
.loading-fill {
  height:100%; width:0; background: linear-gradient(90deg,#ff3333,#ff6666,#ff3333);
  border-radius:12px; transition:width 0.3s ease; animation: glow 1.2s infinite alternate;
}
.loading-percent {
  position:absolute; top:50%; left:50%; transform:translate(-50%,-50%);
  font-weight:bold; color:#fff; font-size:13px; text-shadow:0 0 5px black;
}
.loading-text { margin-top:10px; color:#fff; font-size:14px; }
@keyframes glow { from{box-shadow:0 0 6px #ff3333;} to{box-shadow:0 0 18px #ff6666;} }

/* Music selector */
.music-selector { margin-top:20px; text-align:center; color:#fff; }
.music-selector button { margin:5px; padding:6px 12px; border:none; border-radius:8px; background:#ff3333; color:white; cursor:pointer; transition:0.3s; }
.music-selector button:hover { background:#ff6666; }

/* Music Visualizer */
#music-visualizer {
  width: 100%; height:80px; position:fixed; bottom:0; left:0;
  z-index:4; pointer-events:none;
}
// --- XP + Level System ---
let xp = parseInt(localStorage.getItem("xp")) || 0;
let level = parseInt(localStorage.getItem("level")) || 1;
const maxLevel = 10000;

// Display elements (make sure you add these in your HTML somewhere!)
const xpDisplay = document.getElementById("xp-display");
const levelDisplay = document.getElementById("level-display");

function updateLevel() {
  level = Math.floor(xp / 100) + 1;
  if (level > maxLevel) level = maxLevel;
  localStorage.setItem("xp", xp);
  localStorage.setItem("level", level);
  if (xpDisplay) xpDisplay.textContent = `XP: ${xp}`;
  if (levelDisplay) levelDisplay.textContent = `Level: ${level}`;
}

// --- XP gain while vibing ---
setInterval(() => {
  xp += 1; // 1 XP per second
  updateLevel();
}, 1000);

// --- Button XP ---
btns.forEach(btn => {
  btn.addEventListener("click", () => {
    let bonus = btn.classList.contains("social") ? 100 : 5;
    xp += bonus;
    updateLevel();
  });
});

// Initialize display on load
updateLevel();
